from __future__ import annotations

<<<<<<< HEAD
from collections.abc import Iterable
from typing import TypeVar

_IterableT = TypeVar("_IterableT", bound="Iterable[str]")


def consolidate_linker_args(args: _IterableT) -> _IterableT | str:
=======
from .py38 import removeprefix


def consolidate_linker_args(args: list[str]) -> list[str] | str:
>>>>>>> 145c46dcb5b19a9082f2e39ee66b3b5564513083
    """
    Ensure the return value is a string for backward compatibility.

    Retain until at least 2025-04-31. See pypa/distutils#246
    """

    if not all(arg.startswith('-Wl,') for arg in args):
        return args
<<<<<<< HEAD
    return '-Wl,' + ','.join(arg.removeprefix('-Wl,') for arg in args)
=======
    return '-Wl,' + ','.join(removeprefix(arg, '-Wl,') for arg in args)
>>>>>>> 145c46dcb5b19a9082f2e39ee66b3b5564513083
