# Generated by Django 5.0.7 on 2024-09-10 20:42

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Escola',
            fields=[
                ('escola_id', models.AutoField(primary_key=True, serialize=False)),
                ('nome_escola', models.CharField(max_length=100, verbose_name='Nome da Escola')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Digite o E-mail')),
                ('nr_telefone', models.CharField(max_length=30, unique=True, verbose_name='Número do Telefone')),
                ('instituicao', models.CharField(blank=True, max_length=100, verbose_name='Instituição')),
                ('cep', models.CharField(blank=True, max_length=8, validators=[django.core.validators.RegexValidator(message='CEP deve ter 8 dígitos', regex='^\\d{8}$')], verbose_name='CEP do Imóvel')),
                ('logradouro', models.CharField(blank=True, max_length=100, verbose_name='Nome da Rua')),
                ('bairro', models.CharField(blank=True, max_length=50, verbose_name='Bairro')),
                ('cidade', models.CharField(blank=True, max_length=50, verbose_name='Cidade')),
                ('estado', models.CharField(blank=True, max_length=2, verbose_name='Estado')),
                ('nr_imovel', models.CharField(blank=True, max_length=10, verbose_name='Número do Imóvel')),
                ('observacao', models.TextField(blank=True, max_length=100, verbose_name='Observação')),
                ('erro_cep', models.CharField(blank=True, max_length=255, verbose_name='Erro ao buscar o CEP')),
            ],
        ),
        migrations.CreateModel(
            name='Editoras',
            fields=[
                ('editora_id', models.AutoField(primary_key=True, serialize=False)),
                ('nome_editora', models.CharField(max_length=100, unique=True, verbose_name='Nome da Editora')),
                ('pais', models.CharField(max_length=50, verbose_name='País')),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestao.escola', verbose_name='Escola')),
            ],
            options={
                'verbose_name': 'Editora',
                'verbose_name_plural': 'Editoras',
                'ordering': ['nome_editora'],
            },
        ),
        migrations.CreateModel(
            name='Clientes',
            fields=[
                ('cliente_id', models.AutoField(primary_key=True, serialize=False)),
                ('nome_cliente', models.CharField(max_length=100, verbose_name='Nome do Usuário')),
                ('email', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='E-mail')),
                ('documento', models.CharField(blank=True, max_length=30, unique=True, verbose_name='Número do Documento')),
                ('situacao', models.CharField(blank=True, max_length=30, verbose_name='Situação ')),
                ('serie', models.CharField(blank=True, max_length=30, verbose_name='Série ')),
                ('nr_telefone', models.CharField(blank=True, max_length=30, unique=True, verbose_name='Número do Telefone')),
                ('tipo_usuario', models.CharField(choices=[('aluno', 'Aluno'), ('professor', 'Professor'), ('pesquisador', 'Pesquisador'), ('outros', 'Outros')], default='aluno', max_length=30, verbose_name='Tipo de Usuário')),
                ('cpf', models.CharField(blank=True, max_length=11, unique=True, validators=[django.core.validators.RegexValidator(message='CPF deve ter 11 dígitos', regex='^\\d{11}$')])),
                ('cep', models.CharField(blank=True, max_length=8, validators=[django.core.validators.RegexValidator(message='CEP deve ter 8 dígitos', regex='^\\d{8}$')], verbose_name='CEP do Imóvel')),
                ('logradouro', models.CharField(blank=True, max_length=255)),
                ('bairro', models.CharField(blank=True, max_length=255)),
                ('cidade', models.CharField(blank=True, max_length=100)),
                ('estado', models.CharField(blank=True, max_length=2)),
                ('nr_imovel', models.CharField(blank=True, max_length=10, verbose_name='Número do Imóvel')),
                ('observacao', models.TextField(blank=True, max_length=100, verbose_name='Observação: ')),
                ('erro_cep', models.CharField(blank=True, max_length=255, verbose_name='Erro ao buscar o CEP')),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestao.escola', verbose_name='Escola')),
            ],
            options={
                'verbose_name': 'Nome do Requisitante',
                'verbose_name_plural': 'Requisitantes',
                'ordering': ['nome_cliente'],
            },
        ),
        migrations.CreateModel(
            name='Autores',
            fields=[
                ('autor_id', models.AutoField(primary_key=True, serialize=False)),
                ('nome_autor', models.CharField(max_length=100, unique=True, verbose_name='Nome do Autor')),
                ('nacionalidade', models.CharField(max_length=50, verbose_name='Nacionalidade')),
                ('biografia', models.TextField(blank=True, null=True, verbose_name='Biografia')),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestao.escola', verbose_name='Escola')),
            ],
            options={
                'verbose_name': 'Autor',
                'verbose_name_plural': 'Autores',
                'ordering': ['nome_autor'],
            },
        ),
        migrations.CreateModel(
            name='Assuntos',
            fields=[
                ('assunto_id', models.AutoField(primary_key=True, serialize=False)),
                ('descr_assunto', models.CharField(max_length=100, unique=True, verbose_name='Nome do Assunto')),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestao.escola', verbose_name='Escola')),
            ],
            options={
                'verbose_name': 'Assunto',
                'verbose_name_plural': 'Assuntos',
                'ordering': ['descr_assunto'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('escola', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gestao.escola')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Eventos',
            fields=[
                ('evento_id', models.AutoField(primary_key=True, serialize=False)),
                ('nome_evento', models.CharField(max_length=255)),
                ('data_evento', models.DateTimeField()),
                ('local', models.CharField(max_length=255)),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestao.escola', verbose_name='Escola')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventos',
                'ordering': ['nome_evento'],
            },
        ),
        migrations.CreateModel(
            name='Generos',
            fields=[
                ('genero_id', models.AutoField(primary_key=True, serialize=False)),
                ('nome_genero', models.CharField(max_length=100, unique=True, verbose_name='Nome do Gênero')),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestao.escola', verbose_name='Escola')),
            ],
            options={
                'verbose_name': 'Gênero',
                'verbose_name_plural': 'Gêneros',
                'ordering': ['nome_genero'],
            },
        ),
        migrations.CreateModel(
            name='Livros',
            fields=[
                ('livro_id', models.AutoField(primary_key=True, serialize=False)),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('isbn', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='ISBN')),
                ('edicao', models.CharField(blank=True, max_length=50, null=True, verbose_name='Edição')),
                ('ano_publicacao', models.PositiveIntegerField(blank=True, null=True, verbose_name='Ano de Publicação')),
                ('qtlivros', models.BigIntegerField(blank=True, null=True, verbose_name='Quantidade de Livros')),
                ('localizacao', models.CharField(blank=True, max_length=100, null=True, verbose_name='Localização')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('descr_assunto', models.ManyToManyField(blank=True, to='gestao.assuntos', verbose_name='Assuntos')),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestao.escola', verbose_name='Escola')),
                ('nome_autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestao.autores', verbose_name='Autor')),
                ('nome_editora', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gestao.editoras', verbose_name='Editora')),
                ('nome_genero', models.ManyToManyField(blank=True, to='gestao.generos', verbose_name='Gêneros')),
            ],
            options={
                'verbose_name': 'Livro',
                'verbose_name_plural': 'Livros',
                'ordering': ['titulo'],
            },
        ),
        migrations.CreateModel(
            name='EmprestimoLivro',
            fields=[
                ('emprestimo_id', models.AutoField(primary_key=True, serialize=False)),
                ('data_emprestimo', models.DateField(default=django.utils.timezone.now, verbose_name='Data do Empréstimo')),
                ('data_devolucao', models.DateField(blank=True, null=True, verbose_name='Data da Devolução')),
                ('multa', models.DecimalField(decimal_places=2, default=0.0, max_digits=6, verbose_name='Multa')),
                ('nome_cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestao.clientes', verbose_name='Cliente')),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestao.escola', verbose_name='Escola')),
                ('titulo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestao.livros', verbose_name='Livro')),
            ],
            options={
                'verbose_name': 'Empréstimo de Livros',
                'verbose_name_plural': 'Empréstimos de Livros',
                'ordering': ['data_emprestimo'],
            },
        ),
        migrations.CreateModel(
            name='Reservas',
            fields=[
                ('reserva_id', models.AutoField(primary_key=True, serialize=False)),
                ('data_reserva', models.DateField(default=django.utils.timezone.now, verbose_name='Data da Reserva')),
                ('data_retirada', models.DateField(blank=True, null=True, verbose_name='Data de Retirada')),
                ('data_devolucao', models.DateField(blank=True, null=True, verbose_name='Data de Devolução')),
                ('nome_cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestao.clientes', verbose_name='Cliente')),
                ('titulo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestao.livros', verbose_name='Livro')),
            ],
            options={
                'verbose_name': 'Reserva',
                'verbose_name_plural': 'Reservas',
                'ordering': ['data_reserva'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestao.escola')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'gestao_userprofile',
                'ordering': ['escola'],
            },
        ),
        migrations.CreateModel(
            name='Videos',
            fields=[
                ('video_id', models.AutoField(primary_key=True, serialize=False)),
                ('nome_video', models.CharField(max_length=100, verbose_name='Nome do Vídeo')),
                ('ano_publicacao', models.IntegerField()),
                ('colecao', models.CharField(max_length=100, verbose_name='Coleção')),
                ('qtvideos', models.BigIntegerField(verbose_name='Quantidade de Vídeos')),
                ('estante', models.CharField(blank=True, max_length=50, verbose_name='Nome da Estante')),
                ('observacao', models.CharField(blank=True, max_length=100, verbose_name='Observação')),
                ('data_cadastro', models.DateField(default=django.utils.timezone.now, verbose_name='Data do Cadastro')),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestao.escola', verbose_name='Escola')),
            ],
            options={
                'verbose_name': 'Cadastro de Vídeos',
                'verbose_name_plural': 'Cadastro de Vídeos',
                'ordering': ['nome_video'],
            },
        ),
        migrations.CreateModel(
            name='EmprestimoVideo',
            fields=[
                ('emprestimo_id', models.AutoField(primary_key=True, serialize=False)),
                ('data_emprestimo', models.DateField(default=django.utils.timezone.now, verbose_name='Data do Empréstimo')),
                ('data_devolucao', models.DateField(blank=True, null=True, verbose_name='Data da Devolução')),
                ('multa', models.DecimalField(decimal_places=2, default=0.0, max_digits=6, verbose_name='Multa')),
                ('nome_cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestao.clientes', verbose_name='Cliente')),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestao.escola', verbose_name='Escola')),
                ('nome_video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestao.videos', verbose_name='Vídeo')),
            ],
            options={
                'verbose_name': 'Empréstimo de Vídeo',
                'verbose_name_plural': 'Empréstimos de Vídeos',
                'ordering': ['data_emprestimo'],
            },
        ),
    ]
